<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://example.com</id>
    <title>Hexo • Posts by &#34;汇编&#34; tag</title>
    <link href="http://example.com" />
    <updated>2022-11-01T05:38:45.000Z</updated>
    <category term="运维" />
    <category term="逆向" />
    <category term="SQL injection" />
    <category term="网络" />
    <category term="File upload" />
    <category term="汇编" />
    <category term="大数据" />
    <entry>
        <id>http://example.com/2022/11/01/%E6%B1%87%E7%BC%96/</id>
        <title>汇编</title>
        <link rel="alternate" href="http://example.com/2022/11/01/%E6%B1%87%E7%BC%96/"/>
        <content type="html">&lt;h1 id=&#34;汇编&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#汇编&#34;&gt;#&lt;/a&gt; 汇编&lt;/h1&gt;
&lt;p&gt;1. 汇编语言组成&lt;/p&gt;
&lt;p&gt;汇编指令 ，伪指令，其他符号&lt;/p&gt;
&lt;p&gt;2. 汇编不区分大小写&lt;/p&gt;
&lt;p&gt;3. 数据总线，控制总线，地址总线 – 外部总线&lt;/p&gt;
&lt;h2 id=&#34;寄存器cpu&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#寄存器cpu&#34;&gt;#&lt;/a&gt; 寄存器（CPU）&lt;/h2&gt;
&lt;p&gt;CPU 由运算器，控制器，寄存器组成，靠内部总线相连&lt;/p&gt;
&lt;p&gt;8086 有 14 个寄存器，它们的名称为 AB,BX,CX,DX，SI，DI，SP，BP，IP，CS，SS，DS，ES，PSW，都是 16 位&lt;/p&gt;
&lt;p&gt;AX,BX,CX,DX 为通用结存器，最大可以存储 2^16-1&lt;/p&gt;
&lt;img data-src=&#34;https://kbshire-1308981697.cos.ap-shanghai.myqcloud.com/img/image-20221009203327558.png&#34; alt=&#34;image-20221009203327558&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;p&gt;每个又可以分为 H 和 L，比如 AH 和 AL，可以分开独立使用&lt;/p&gt;
&lt;img data-src=&#34;https://kbshire-1308981697.cos.ap-shanghai.myqcloud.com/img/image-20221009204003372.png&#34; alt=&#34;image-20221009204003372&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;p&gt;1word = 2 Byte&lt;/p&gt;
&lt;p&gt;16 位 CPU 特征：1. 运算器一次最多处理 16 位 2，寄存器最大宽度为 16 位 3. 寄存器和运算器之间通路 16 位&lt;/p&gt;
&lt;p&gt;由于 cpu 内部总线是 16 位，但外部总线是 20 位&lt;/p&gt;
&lt;p&gt;8086 内部使用两个 16 位内部地址来将器变为 20 位&lt;/p&gt;
&lt;img data-src=&#34;https://kbshire-1308981697.cos.ap-shanghai.myqcloud.com/img/image-20221009211023097.png&#34; alt=&#34;image-20221009211023097&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;p&gt;第一个地址为段地址，第二个为偏移地址 ，通过地址加法器变为 20 位&lt;/p&gt;
&lt;p&gt;物理地址 = 段地址 * 16 + 偏移地址&lt;/p&gt;
&lt;img data-src=&#34;https://kbshire-1308981697.cos.ap-shanghai.myqcloud.com/img/image-20221009211420365.png&#34; alt=&#34;image-20221009211420365&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;p&gt;即地址左移四位，每次左移一位，对应的 16 进制和 10 进制就 * 2，因为地址是二进制&lt;/p&gt;
&lt;p&gt;扩展：一个 x 进制左移一位就 * x&lt;/p&gt;
&lt;p&gt;段地址长度可以自己指定，一个段的最大长度为 64kb，起始地址一定为 16 的倍数&lt;/p&gt;
&lt;p&gt;一个物理地址可以有很多种段地址和偏移地址的组合&lt;/p&gt;
&lt;p&gt;2000:1F60 数据在 21F60 中&lt;/p&gt;
&lt;p&gt;段寄存器 CS，DS，SS，ES&lt;/p&gt;
&lt;p&gt;CS：代码地址&lt;/p&gt;
&lt;p&gt;DS：数据地址&lt;/p&gt;
&lt;p&gt;SS：堆栈地址&lt;/p&gt;
&lt;p&gt;IP：指令指针寄存器&lt;/p&gt;
&lt;p&gt;修改 CS IP 中内容使用&lt;/p&gt;
&lt;p&gt;jmp 段地址：偏移地址&lt;/p&gt;
&lt;p&gt;jmp ax   // 仅修改 IP 内容，参数为合法寄存器，类似于 mov IP，AX&lt;/p&gt;
&lt;p&gt;8086cpu 工作过程&lt;/p&gt;
&lt;p&gt;1.CS:IP 指向内存单元读取执行，读取执行进入指令缓冲器&lt;/p&gt;
&lt;p&gt;2.IP 指向下一条指令&lt;/p&gt;
&lt;p&gt;3. 执行指令，重复到 1&lt;/p&gt;
&lt;p&gt;初始 CS=2000H，IP=0000H&lt;/p&gt;
&lt;img data-src=&#34;https://kbshire-1308981697.cos.ap-shanghai.myqcloud.com/img/image-20221010210638345.png&#34; alt=&#34;image-20221010210638345&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;p&gt;mov ax 6622&lt;/p&gt;
&lt;p&gt;jmp 1000:3&lt;/p&gt;
&lt;p&gt;mov ax,0000&lt;/p&gt;
&lt;p&gt;mov bx,ax&lt;/p&gt;
&lt;p&gt;jmp bx&lt;/p&gt;
&lt;p&gt;mov ax,0123&lt;/p&gt;
&lt;p&gt;mov ax,0000&lt;/p&gt;
&lt;p&gt;… 死循环&lt;/p&gt;
&lt;p&gt;代码段&lt;/p&gt;
&lt;p&gt;将 &amp;lt;=64kb 的一组代码，起始地址为 16 倍数的内存单元作为一个代码段&lt;/p&gt;
&lt;p&gt;通过 CS：IP 指向代码段首地址来执行代码段&lt;/p&gt;
&lt;p&gt;DEBUG&lt;/p&gt;
&lt;p&gt;用 Debug 的 R 命令查看、改变 CPU 寄存器的内容；&lt;/p&gt;
&lt;p&gt;用 Debug 的 D 命令查看内存中的内容；&lt;/p&gt;
&lt;p&gt;用 Debug 的 E 命令改写内存中的内容；&lt;/p&gt;
&lt;p&gt;用 Debug 的 U 命令将内存中的机器指令翻译成汇编指令；&lt;/p&gt;
&lt;p&gt;用 Debug 的 T 命令执行一条机器指令；&lt;/p&gt;
&lt;p&gt;用 Debug 的 A 命令以汇编指令的格式在内存中写入一条机器指令。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://kbshire-1308981697.cos.ap-shanghai.myqcloud.com/img/image-20221010213213522.png&#34; alt=&#34;image-20221010213213522&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://kbshire-1308981697.cos.ap-shanghai.myqcloud.com/img/image-20221010213504618.png&#34; alt=&#34;image-20221010213504618&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://kbshire-1308981697.cos.ap-shanghai.myqcloud.com/img/image-20221010213716733.png&#34; alt=&#34;image-20221010213716733&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://kbshire-1308981697.cos.ap-shanghai.myqcloud.com/img/image-20221010213841925.png&#34; alt=&#34;image-20221010213841925&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://kbshire-1308981697.cos.ap-shanghai.myqcloud.com/img/image-20221010214052414.png&#34; alt=&#34;image-20221010214052414&#34;&gt;&lt;/p&gt;
&lt;p&gt;fff0:0 ff 可以查看 rom 时间&lt;/p&gt;
&lt;p&gt;b810:0 可以修改显存&lt;/p&gt;
&lt;img data-src=&#34;https://kbshire-1308981697.cos.ap-shanghai.myqcloud.com/img/image-20221011204621998.png&#34; alt=&#34;image-20221011204621998&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;p&gt;1 地址字单元存放的字型数据时 124EH&lt;/p&gt;
&lt;p&gt;可以将 N 和 N+1 两个单元看成一个字单元&lt;/p&gt;
&lt;h2 id=&#34;寄存器内存&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#寄存器内存&#34;&gt;#&lt;/a&gt; 寄存器（内存）&lt;/h2&gt;
&lt;p&gt;MOV al,[0]  // 将偏移地址为 0 的内存单元送到 AL 寄存器中&lt;/p&gt;
&lt;p&gt;不能把立即数直接送入段寄存器 ，需要经过通用寄存器中转&lt;/p&gt;
&lt;p&gt;数据 -》通用寄存器 -》段寄存器&lt;/p&gt;
&lt;p&gt;将数据从寄存器送入内存单元&lt;/p&gt;
&lt;p&gt;mov bx,1000H&lt;/p&gt;
&lt;p&gt;mov ds,bx&lt;/p&gt;
&lt;p&gt;mov [0],al&lt;/p&gt;
&lt;img data-src=&#34;https://kbshire-1308981697.cos.ap-shanghai.myqcloud.com/img/image-20221011210109223.png&#34; alt=&#34;image-20221011210109223&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;img data-src=&#34;https://kbshire-1308981697.cos.ap-shanghai.myqcloud.com/img/image-20221011210150336.png&#34; alt=&#34;image-20221011210150336&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;p&gt;-e 1000:0 23 11 22 66&lt;/p&gt;
&lt;p&gt;1122 8833 8833&lt;/p&gt;
&lt;img data-src=&#34;https://kbshire-1308981697.cos.ap-shanghai.myqcloud.com/img/image-20221012084245812.png&#34; alt=&#34;image-20221012084245812&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;p&gt;2c34&lt;/p&gt;
&lt;p&gt;1B12   -d 1000:0&lt;/p&gt;
&lt;p&gt;0000&lt;/p&gt;
&lt;p&gt;mov 指令&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;mov 寄存器，数据&lt;/p&gt;
&lt;p&gt;mov 寄存器，寄存器&lt;/p&gt;
&lt;p&gt;mov 寄存器，内存单元   mov ax,[0]&lt;/p&gt;
&lt;p&gt;mov 内存单元，客存器   mov [0],ax&lt;/p&gt;
&lt;p&gt;mov 段寄存器，寄存器&lt;/p&gt;
&lt;p&gt;mov 寄存器，段寄存器&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;add，sub&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;add 寄存器，数据&lt;/p&gt;
&lt;p&gt;add 寄存器，寄存器&lt;/p&gt;
&lt;p&gt;add 寄存器，内存单元&lt;/p&gt;
&lt;p&gt;add 内存单元，寄存器&lt;/p&gt;
&lt;p&gt;sub 寄存器，数据&lt;/p&gt;
&lt;p&gt;sub 寄存器，寄存器&lt;/p&gt;
&lt;p&gt;sub 寄存器，内存单元&lt;/p&gt;
&lt;p&gt;sub 内存单元，寄存器&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;add,sub 不能使用段寄存器为参数&lt;/p&gt;
&lt;p&gt;数据段：长度为 N 的地址连续，起始地址为 16 倍数的内存单元定义为存储数据的内存空间&lt;/p&gt;
&lt;p&gt;将 123B0-123BA 的前三个单元的字节型数据累加&lt;/p&gt;
&lt;img data-src=&#34;https://kbshire-1308981697.cos.ap-shanghai.myqcloud.com/img/image-20221012212730685.png&#34; alt=&#34;image-20221012212730685&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;p&gt;累加字型数据&lt;/p&gt;
&lt;img data-src=&#34;https://kbshire-1308981697.cos.ap-shanghai.myqcloud.com/img/image-20221012213223456.png&#34; alt=&#34;image-20221012213223456&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;p&gt;[address] 表示一个偏移地址为 address 的内存单元&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../AppData/Roaming/Typora/typora-user-images/image-20221012214721228.png&#34; alt=&#34;image-20221012214721228&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://kbshire-1308981697.cos.ap-shanghai.myqcloud.com/img/image-20221012214843733.png&#34; alt=&#34;image-20221012214843733&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://kbshire-1308981697.cos.ap-shanghai.myqcloud.com/img/image-20221012215020183.png&#34; alt=&#34;image-20221012215020183&#34;&gt;&lt;/p&gt;
&lt;p&gt;即 [0] 073F 和 073F [0] 会将 073f 当做偏移地址，验证：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://kbshire-1308981697.cos.ap-shanghai.myqcloud.com/img/image-20221012215201456.png&#34; alt=&#34;image-20221012215201456&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://kbshire-1308981697.cos.ap-shanghai.myqcloud.com/img/image-20221012215301128.png&#34; alt=&#34;image-20221012215301128&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;栈&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#栈&#34;&gt;#&lt;/a&gt; 栈&lt;/h4&gt;
&lt;p&gt;8086 提供的入栈和出栈 push,pop&lt;/p&gt;
&lt;p&gt;push ax 将寄存器 ax 中的数据送入栈中&lt;/p&gt;
&lt;p&gt;pop ax 从栈顶取出数据送入 ax&lt;/p&gt;
&lt;p&gt;通过段寄存器 SS 存放栈顶的段地址，sp 存放栈顶偏移地址，任意时刻，SS:SP 指向栈顶元素&lt;/p&gt;
&lt;p&gt;push ax sp=sp-2,SS:SP 指向新栈顶，放入数据&lt;/p&gt;
&lt;img data-src=&#34;https://kbshire-1308981697.cos.ap-shanghai.myqcloud.com/img/image-20221013193051835.png&#34; alt=&#34;image-20221013193051835&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;img data-src=&#34;https://kbshire-1308981697.cos.ap-shanghai.myqcloud.com/img/image-20221013193356305.png&#34; alt=&#34;image-20221013193356305&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;blockquote&gt;
&lt;p&gt;任意时刻・SS:SP 指向栈顶元素。当栈为空的时候，栈中没有元素，也就不存在栈项元素&lt;br&gt;
所 SS:SP 只能指向栈的最底部单元下面的单元，该单元的偏移地址为栈最底部的字单元的偏移地址 + 2&lt;br&gt;
 栈最底部字单元的地址为 1000:000E，所以栈空时 SP=0010H&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;pop ax  将数据送入 ax 中，SP=SP+2，数据仍在内存中，下一次 push 或其他写入数据的操作时会覆盖&lt;/p&gt;
&lt;img data-src=&#34;https://kbshire-1308981697.cos.ap-shanghai.myqcloud.com/img/image-20221013194330665.png&#34; alt=&#34;image-20221013194330665&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;p&gt;push 和 pop 可以操作段寄存器，通用寄存器，内存单元&lt;/p&gt;
&lt;p&gt;push ax&lt;/p&gt;
&lt;p&gt;push ds&lt;/p&gt;
&lt;p&gt;push [0]&lt;/p&gt;
&lt;h4 id=&#34;栈顶越界&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#栈顶越界&#34;&gt;#&lt;/a&gt; 栈顶越界&lt;/h4&gt;
&lt;p&gt;栈满 push，栈空 pop 产生越界&lt;/p&gt;
&lt;p&gt;栈满 push 会导致溢出覆盖栈外的数据&lt;/p&gt;
&lt;p&gt;栈空 pop 会将别的数据放入寄存器中产生溢出&lt;/p&gt;
&lt;p&gt;8086CPU 中没有检测的机制，需要自己注意…&lt;/p&gt;
&lt;h4 id=&#34;练习&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#练习&#34;&gt;#&lt;/a&gt; 练习&lt;/h4&gt;
&lt;p&gt;将 10000H~1000FH 这段空间当作栈，初始状态是空的，将 AX,BX,DS 中的数据入栈&lt;/p&gt;
&lt;p&gt;mov ax,1000&lt;/p&gt;
&lt;p&gt;mov ss,ax&lt;/p&gt;
&lt;p&gt;mov sp,0010&lt;/p&gt;
&lt;p&gt;push ax&lt;/p&gt;
&lt;p&gt;push bx&lt;/p&gt;
&lt;p&gt;push ds&lt;/p&gt;
&lt;p&gt;(1）将 10000H~1000FH 这段空间当作栈，初始状态是空的；&lt;/p&gt;
&lt;p&gt;(2）设置 AX=001AH，BX=001BH;&lt;/p&gt;
&lt;p&gt;(3）将 AX，BX 中的数据入栈&lt;/p&gt;
&lt;p&gt;(4）然后将 AX，BX 清零；&lt;/p&gt;
&lt;p&gt;(5）从栈中恢复 AX，BX 原来的内容。&lt;/p&gt;
&lt;p&gt;mov ax,1000&lt;/p&gt;
&lt;p&gt;mov ss,ax&lt;/p&gt;
&lt;p&gt;mov sp,0010&lt;/p&gt;
&lt;p&gt;mov ax,001A&lt;/p&gt;
&lt;p&gt;mov bx,001B&lt;/p&gt;
&lt;p&gt;push ax&lt;/p&gt;
&lt;p&gt;push bx&lt;/p&gt;
&lt;p&gt;mov ax,0   // 使用 sub ax,ax 只使用两个字节，mov ax,0 机器码需要三个字节，也可以使用 xor ax,ax&lt;/p&gt;
&lt;p&gt;mov bx,0&lt;/p&gt;
&lt;p&gt;pop bx&lt;/p&gt;
&lt;p&gt;pop ax&lt;/p&gt;
&lt;p&gt;(1)   将 10000H~1000FH 这段空间当栈，初始状态是空的；&lt;/p&gt;
&lt;p&gt;(2）设置 AX=002AH ，BX=002BH;&lt;/p&gt;
&lt;p&gt;(3）利用栈交换 AX 和 BX 中的数据。&lt;/p&gt;
&lt;p&gt;mov ax,1000&lt;/p&gt;
&lt;p&gt;mov ss,ax&lt;/p&gt;
&lt;p&gt;mov sp,0010&lt;/p&gt;
&lt;p&gt;mov ax,002A&lt;/p&gt;
&lt;p&gt;mov bx,002B&lt;/p&gt;
&lt;p&gt;push ax&lt;/p&gt;
&lt;p&gt;push bx&lt;/p&gt;
&lt;p&gt;pop ax&lt;/p&gt;
&lt;p&gt;pop bx&lt;/p&gt;
&lt;p&gt;我们如果要在 10000H 处写入字型数据 2266H, 可以用以下的代码完成︰&lt;/p&gt;
&lt;p&gt;mov ax,1000H&lt;/p&gt;
&lt;p&gt;mov ds,ax&lt;/p&gt;
&lt;p&gt;mov ax,2266H&lt;/p&gt;
&lt;p&gt;mov [0],ax&lt;/p&gt;
&lt;p&gt;补在 10000H 处写入字型数据 2266H&lt;/p&gt;
&lt;p&gt;mov ax,1000&lt;/p&gt;
&lt;p&gt;mov ss,ax&lt;/p&gt;
&lt;p&gt;mov sp,2   //push 之前先 - 2，在放输入，2-2=0&lt;/p&gt;
&lt;p&gt;mov ax,2266&lt;/p&gt;
&lt;p&gt;push ax&lt;/p&gt;
&lt;p&gt;要求，不能用 mov 内存单元，寄存器这类指令&lt;/p&gt;
&lt;p&gt;push，pop 实质上是一种内存传送指令，push，pop 访问的内存单元的地址是由 ss:sp 指出的&lt;/p&gt;
&lt;p&gt;pop，pop 栈操作只修改 sp，sp 最大变化范围为 0-FFFF&lt;/p&gt;
&lt;p&gt;如果我们将 10000H~1FFFFH 这段空间当作栈段，初始状态是空的，比时 SS=1000H，SP=0&lt;/p&gt;
&lt;p&gt;栈顶变化范围为 0-FFFFH，栈空 sp=0，一直压栈，栈满后 sp=0，再次压栈，栈顶将环绕，覆盖原来内容&lt;/p&gt;
&lt;p&gt;对于代码段，数据段，栈段，cpu 通过 CS DS SS 区分&lt;/p&gt;
&lt;p&gt;CS:IP&lt;/p&gt;
&lt;p&gt;SS:SP&lt;/p&gt;
&lt;p&gt;DS:[0]&lt;/p&gt;
&lt;h2 id=&#34;程序编写&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#程序编写&#34;&gt;#&lt;/a&gt; 程序编写&lt;/h2&gt;
&lt;p&gt;1. 编写汇编程序，后缀为.asm&lt;/p&gt;
&lt;p&gt;2. 编译 masm.exe 连接 link.exe&lt;/p&gt;
&lt;p&gt;3. 执行可执行文件，有程序和数据两部分，操作系统加可执行文件中的机器码和数据加载入内存，进行初始化&lt;/p&gt;
&lt;p&gt;源程序&lt;/p&gt;
&lt;img data-src=&#34;https://kbshire-1308981697.cos.ap-shanghai.myqcloud.com/img/image-20221015201813041.png&#34; alt=&#34;image-20221015201813041&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;p&gt;汇编指令上图中 mov，add，int 等&lt;/p&gt;
&lt;p&gt;伪指令上图中 assume codesg，没有对应的机器码，不被 cpu 执行，被编译器执行&lt;/p&gt;
&lt;p&gt;定义一个段&lt;/p&gt;
&lt;p&gt;segment 和 ends 是一对成对的伪指令，定义一个段 segment 开始，ends 结束&lt;/p&gt;
&lt;p&gt;格式:&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;段名 segment &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;段名 ends&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;一个汇编程序由多个段组成&lt;/p&gt;
&lt;p&gt;ends 是汇编程序结束标记&lt;/p&gt;
&lt;p&gt;assume 假设寄存器和段关联，CS:codesg，假设代码段的名称为 codesg&lt;/p&gt;
&lt;p&gt;将源程序文件中内容称为源程序，编译后称为程序，程序放在可执行文件中 PE&lt;/p&gt;
&lt;img data-src=&#34;https://kbshire-1308981697.cos.ap-shanghai.myqcloud.com/img/image-20221015203100625.png&#34; alt=&#34;image-20221015203100625&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;p&gt;标号 一个标号指代一个地址，codesg&lt;/p&gt;
&lt;p&gt;编程运算 2^3&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;assume cs:abc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;abc segent&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov ax,2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add ax,ax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add ax,ax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;abc ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;DOS 是一个单任务操作系统，一个程序结束后，将 CPU 控制权交还给使他运行的程序，称为返回&lt;/p&gt;
&lt;p&gt;返回 程序段&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;mov ax,4c00H&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int 21H&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;https://kbshire-1308981697.cos.ap-shanghai.myqcloud.com/img/image-20221015204512894.png&#34; alt=&#34;image-20221015204512894&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;p&gt;masm.exe 1.asm&lt;/p&gt;
&lt;p&gt;link 1.obj&lt;/p&gt;
&lt;p&gt;可以在命令后加上；简化编译和连接&lt;/p&gt;
&lt;p&gt;连接：源程序很大时将他分为多个源程序编译，成文目标文件后在连接到一起。将库文件和程序的目标文件连接在一起才可以生成可执行文件&lt;/p&gt;
&lt;p&gt;在 DOS 中运行 1.exe 时，DOS 的 command 将 1.exe 加载进入内存，command 设置 CPU 的 cs:IP 指向程序的第一条指令，从而得以使程序运行。&lt;/p&gt;
&lt;p&gt;程序运行结束后，返回到 command 中，cpu 继续执行 command&lt;/p&gt;
&lt;img data-src=&#34;https://kbshire-1308981697.cos.ap-shanghai.myqcloud.com/img/image-20221016204217510.png&#34; alt=&#34;image-20221016204217510&#34; style=&#34;zoom:67%;&#34; /&gt;
&lt;p&gt;Debug 将程序加载进入内存，当不放弃对 cpu 控制，使用中断实现&lt;/p&gt;
&lt;p&gt;有入口的程序&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;assume cs:codesg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    codesg segment&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    start:	mov ax,0123H&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    		add bx,0456H&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    		add ax,bx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    		add ax,ax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			mov ax,4c00H&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			int 21H&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;codesg ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;end start&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;debug 将程序 exe 加载入内存后 cx，存放程序长度&lt;/p&gt;
&lt;p&gt;程序加载后，ds 中放着程序所在内存区的段地址，这个内存区的偏移地址为 0，这个内存区的前 256 个字节存放的是 psp，dos 用来和程序进行通信，从 256 字节以后存放的是程序&lt;/p&gt;
&lt;p&gt;psp 的段地址 SA，偏移地址为 0，表示为 SA+10:0&lt;/p&gt;
&lt;img data-src=&#34;https://kbshire-1308981697.cos.ap-shanghai.myqcloud.com/img/image-20221016211036041.png&#34; alt=&#34;image-20221016211036041&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;p&gt;指定到 int 21 时用 p 执行，此时程序 terminated&lt;/p&gt;
&lt;p&gt;使用 q 结束 debug，回到 command 中，因为 debug 由 command 加载&lt;/p&gt;
&lt;h2 id=&#34;bxloop&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#bxloop&#34;&gt;#&lt;/a&gt; [bx]&amp;amp;loop&lt;/h2&gt;
&lt;p&gt;bx:&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;assume cs:codesg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    codesg segment&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    start:	mov ax,2000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    		mov ds,ax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    		mov al,[0]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    		mov bl,[1]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    		mov cl,[2]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    		mov dl,[3]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			mov ax,4c00H&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			int 21H&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;codesg ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;end start&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;实际来说，CPU 并不认编译器的 [0] 这种东西，他会认成 0&lt;/p&gt;
&lt;p&gt;但 debug 中 [0] 可以正常作为偏移地址&lt;/p&gt;
&lt;p&gt;[bx] 表示一个内存单元，偏移地址在 bx 中&lt;/p&gt;
&lt;p&gt;mov bx,0   // 将 0 给 bx&lt;/p&gt;
&lt;p&gt;mov ax,[bx]   // 此时 bx 是偏移地址&lt;/p&gt;
&lt;p&gt;段地址 SA，偏移地址 EA  SA：EA&lt;/p&gt;
&lt;p&gt;() 的含义&lt;/p&gt;
&lt;p&gt;ax 中的内容为 0010，那么 (ax)=0010&lt;/p&gt;
&lt;p&gt;2000:1000 处的内容为 0010，(21000H)=0010&lt;/p&gt;
&lt;p&gt;mov ax,[2] (ax)=((dx)*16+2)&lt;/p&gt;
&lt;p&gt;idata 含义：&lt;/p&gt;
&lt;p&gt;idata 表示常量&lt;/p&gt;
&lt;p&gt;mov ax,[idata] 代表 Mov ax,[0]  Mov ax,[2]  Mov ax,[3]  d = 等&lt;/p&gt;
&lt;p&gt;inc bx    //bx++&lt;/p&gt;
&lt;img data-src=&#34;https://kbshire-1308981697.cos.ap-shanghai.myqcloud.com/img/image-20221017094727684.png&#34; alt=&#34;image-20221017094727684&#34; style=&#34;zoom:67%;&#34; /&gt;
&lt;p&gt;ax 00be&lt;/p&gt;
&lt;p&gt;bx 1002&lt;/p&gt;
&lt;p&gt;内存中 00be 00be&lt;/p&gt;
&lt;p&gt;bx 1004&lt;/p&gt;
&lt;p&gt;内存中 00be 00be 00be&lt;/p&gt;
&lt;p&gt;内存中从左到右为从低到高&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://kbshire-1308981697.cos.ap-shanghai.myqcloud.com/img/image-20221017094440863.png&#34; alt=&#34;image-20221017094440863&#34;&gt;&lt;/p&gt;
&lt;p&gt;内存中 00be 00be 00be be 00&lt;/p&gt;
&lt;p&gt;Loop&lt;/p&gt;
&lt;p&gt;loop 标号&lt;/p&gt;
&lt;p&gt;执行 loop 时 CPU 操作&lt;/p&gt;
&lt;p&gt;1.(cx)=(cx)-1&lt;/p&gt;
&lt;p&gt;2. 判断 cx 中的值，不为 0 跳至标号处执行，为 0 向下执行&lt;/p&gt;
&lt;p&gt;即一般 cx 中存放循环次数&lt;/p&gt;
&lt;p&gt;使用 loop 计算 2^2&lt;/p&gt;
&lt;p&gt;mov ax,2&lt;/p&gt;
&lt;p&gt;add ax,ax&lt;/p&gt;
&lt;p&gt;计算 2^12&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;assume cs:code&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code segment&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;start:	mov ax,2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov cx,11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s: 		add ax,ax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		loop s&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mov ax,4c00h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int 21h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;end start&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意：debug 默认 16 进制，masm 默认十进制&lt;/p&gt;
&lt;p&gt;loop 相当于 do … while …&lt;/p&gt;
&lt;p&gt;计算 123*236 时使用 236+123 次，减少循环次数&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;assume cs:code&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code segment&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;start:	mov ax,0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov cx,123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s: 		add ax,236&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		loop s&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mov ax,4c00h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int 21h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;end start&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;汇编时数据不能以字母开头，要在前面 + 0&lt;/p&gt;
&lt;p&gt;debug g 命令和 p 命令&lt;/p&gt;
&lt;p&gt;将 ffff:0006 单元中的数据 * 123，结果存在 dx 中&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;assume cs:code&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code segment&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;start:	mov ax,0ffffh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ds,ax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov bx,6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ax,[bx]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov dx,0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov cx,123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s:		add dx,ax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		loop s&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mov ax,4c00h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int 21h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;end start&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;g 0014   // 直接执行到 IP 为 0014 的位置&lt;/p&gt;
&lt;p&gt;p 直接执行到循环结束，如果不是 21H 的位置输入&lt;/p&gt;
&lt;p&gt;在程序中&lt;/p&gt;
&lt;p&gt;mov al, ds:[0]    // == mov bx,0  mov al,[bx], == mov al,[0]&lt;/p&gt;
&lt;p&gt;累加 [0]-[b] 的值&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;assume cs:code&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code segment&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;start:	mov ax,0ffffh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ds,ax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov bx,0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov dx,0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov cx,12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s:		mov al,ds:[cs]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ah,0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		add dx,ax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		inc bx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		loop s&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mov ax,4c00h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int 21h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;end start&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;段前缀&lt;/p&gt;
&lt;p&gt;mov ax,cs:[0]    //cs 为段前缀&lt;/p&gt;
&lt;p&gt;一般类似或 0:200-0:2ff 不会有数据和指令，是一段安全的空间&lt;/p&gt;
&lt;p&gt;将内存 ffff:0&lt;sub&gt;ffff:b 段元中的数据拷贝到 0:200&lt;/sub&gt;0:20b 单元中。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;assume cs:code&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code segment&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;start:	mov ax,0ffffh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ds,ax  ;ds中是内存ffff:0中的数据&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ax,0020h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov es,ax  ;es是内存20:0中的数据&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov bx,0   ;bx中为内存偏移值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov cx,12  ;为循环判断条件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s:		mov dl,ds:[bx]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov es:[bx],dl&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		inc bx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		loop s&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mov ax,4c00h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int 21h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;end start&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;多个段的程序&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#多个段的程序&#34;&gt;#&lt;/a&gt; 多个段的程序&lt;/h2&gt;
&lt;p&gt;我们是不能自己随便决定哪段空间可以使用的，应该让系统来为我们分配。&lt;strong&gt;我们可以在程序中&lt;/strong&gt;，定义我们希望处理的数据，这些数据就会被编译、连接程序作为程序的一部分写到可执行文件中。当可执行文件中的程序被加载入内存时，这些数据也同时被加载入内存中。与此同时，我们要处理的数据也就自然而然地获得了存储空间。&lt;/p&gt;
&lt;p&gt;dw define word 定义字型数据，在代码段中定义数据，此时代码 的起始位置是数据之后&lt;/p&gt;
&lt;p&gt;db 定义字节型数据&lt;/p&gt;
&lt;p&gt;数据之间用，分隔&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;assume cs:code&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code segment&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		dw 0123h,0234h,0123h,0234h,0123h,0234h,0123h,0234h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;start:	mov ax,0ffffh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ds,ax  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;标号 start 定义代码段的开始，区分数据和代码&lt;/p&gt;
&lt;p&gt;-u 13f8:0&lt;/p&gt;
&lt;p&gt;-u 13f8:10&lt;/p&gt;
&lt;p&gt;读取结果不一样，如果数据被读成了代码，会导致下面真正的代码读取错误，因此在 debug 加载后，我们需要将 IP 设置为代码段中数据段的结束，比如上面的代码，我们需要将 IP 定义为 10 (10 进制的 16)&lt;/p&gt;
&lt;p&gt;end start 可以告诉编译器程序的入口，即标号的地方。我们若要 CPU 从何处开始执行程序，只要在源程序中用 “end 标号” 指明就可以了。&lt;/p&gt;
&lt;p&gt;代码段中使用栈&lt;/p&gt;
&lt;p&gt;若数据，栈，代码所需空间查过 64kb，就不能放到一个栈中，因此应该用多个段存放数据，代码和栈&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;assume cs:codesg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;codesg segment&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	dw 0123H,0123H,0123H,0123H,0123H,0123H,0123H,0123H&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	dw 0,0,0,0,0,0,0,0  ;将上一行dw的数据入栈和出栈的空间&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;start:	mov ax,cs  ;将代码段起始位置给栈段&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ss,ax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov sp,32  ;设置栈段的偏移地址为32(0+2*16)+1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov bx,0   ;bx偏移地址&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov cx,8   ;cx loop条件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s:		push cs:[bx] ;将cs中的数据入栈&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		add bx,2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		loop s&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov bx,0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov cx,8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s0:		pop cs:[bx]  ;将cs中的数据出栈&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		add bx,2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		loop s0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ax,4c00H&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		int 21H&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;codesg ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;end start&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;存放数据的 data，存放 stack 栈，cs 存放代码&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;assume cs:code,ds:data,ss:stack&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data segment&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	dw 0123H,0123H,0123H,0123H,0123H,0123H,0123H,0123H&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stack segment&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	dw 0,0,0,0,0,0,0,0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stack ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code segment&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;start:	mov ax,stack&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ss,ax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov sp,16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ax,data&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ds,ax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov bx,0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov cx,8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s:		push [bx] &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		add bx,2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		loop s&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov bx,0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov cx,8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s0:		pop [bx]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		add bx,2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		loop s0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ax,4c00H&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		int 21H&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;codesg ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;end start&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在程序中，段名就相当于一个标号，它代表了段地址。所以指令 “mov ax,data” 的含义就是将名称为 “data” 的段的段地址送入 ax。&lt;/p&gt;
&lt;p&gt;CPU 处理我们定义的段中的内容，是通过程序中的汇编指令，和汇编指令对 CS:IP,SS:SP，DS 等寄存器的设置来决定&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;assume cs:b,ds:a,ss:c&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;....&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b segment&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d:	mov ax,c&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	mov ss,ax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	mov sp,20h   ;将c当做栈空间，ss:sp指向c:20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;程序占 N 个字节，运行后，该端实际占有空间为 (段为 16 的倍数)&lt;/p&gt;
&lt;p&gt;(N/16+1)*16&lt;/p&gt;
&lt;p&gt;如果没有 end 后面的标号，CPU 会将第一个数据当做代码段的开始&lt;/p&gt;
&lt;p&gt;程序如下，编写 code 段中的代码，将 a 段和 b 段中的数据依次相加，将结果存到 c 段中。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;assume cs:code&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a segment&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	db 1,2,3,4,5,6,7,8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b segment &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	db 1,2,3,4,5,6,7,8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c segment&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	db 0,0,0,0,0,0,0,0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code segment&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;start:	mov ax,a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ds,ax   ;ds中为数据段a中的数据&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ax,c&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov es,ax   ;es中为数据段c中的数据&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov bx,0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov cx,8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s:		mov dx,ds:[bx]   ;循环将ds(a)中的数据给c&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov es:[bx],dx   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		add bx,2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		loop s&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ax,b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ds,ax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov bx,0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov cx,8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s0:		mov dx,ds:[bx]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		add es:[bx],dx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		add bx,2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		loop s0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ax,4c00H&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		int 21H&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;end start&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;https://kbshire-1308981697.cos.ap-shanghai.myqcloud.com/img/image-20221019214952321.png&#34; alt=&#34;image-20221019214952321&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;更灵活定位内存地址&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#更灵活定位内存地址&#34;&gt;#&lt;/a&gt; 更灵活定位内存地址&lt;/h2&gt;
&lt;p&gt;and 逻辑与，按位进行与运算，通过该指令可以将操作对象响应为设为 0，只要和 0 and&lt;/p&gt;
&lt;p&gt;or 逻辑或，按位进行或运算，通过该指令可以将操作对象相应位设为 0，只要和 1 or&lt;/p&gt;
&lt;p&gt;通过’  ’ 括起来标识一个字符&lt;/p&gt;
&lt;p&gt;db ‘unIX’  相当于 db 75H,6Eh,49H,58H   define byte&lt;/p&gt;
&lt;p&gt;mov al,‘a’  相当于 mov al,61H&lt;/p&gt;
&lt;p&gt;通过 将第五位二进制数和 0 与变为大写&lt;/p&gt;
&lt;p&gt;[bx+idata] 表名一个内存单元，偏移地址为 idata&lt;/p&gt;
&lt;p&gt;mov ax,[200+bx]&lt;/p&gt;
&lt;p&gt;mov ax,[bx+200]&lt;/p&gt;
&lt;p&gt;mov ax,200[bx]&lt;/p&gt;
&lt;p&gt;mov ax,[bx].200&lt;/p&gt;
&lt;p&gt;以上四个写法等效&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;		mov ax,datasg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ds,ax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov bx,0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov cx,5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s:		mov al,[bx]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		and al,11011111b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov [bx],al&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov al,[5+bx]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		or al,00100000b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov [5+bx],al&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		inc bx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		loop s&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;SI,DI&lt;/p&gt;
&lt;p&gt;和 bx 功能相近，但不能分成两个八位寄存器使用&lt;/p&gt;
&lt;p&gt;mov ax,[bx]&lt;/p&gt;
&lt;p&gt;mov ax,[si]&lt;/p&gt;
&lt;p&gt;mov ax,[di]&lt;/p&gt;
&lt;p&gt;一般用 si 指向原始空间，di 指向目标空间&lt;/p&gt;
&lt;p&gt;mov ax,[bx+si]  == mov ax,[bx][si]&lt;/p&gt;
&lt;p&gt;[bx+si+idata] == mov ax,idata[bx][si]  ==  mov ax,[bx][si].200  == mov ax,[bx].200[si]&lt;/p&gt;
&lt;p&gt;将 db 中的每个字母第一个变为大写&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;assume cs:codesg, ds:datasg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;datasg segment&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	db &amp;#x27;1.file       &amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	db &amp;#x27;2.file       &amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	db &amp;#x27;3.file       &amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	db &amp;#x27;4.file       &amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	db &amp;#x27;5.file       &amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	db &amp;#x27;6.file       &amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;datasg ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;codesg segment&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;start:	mov dx,datasg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ds,dx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov bx,0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov cx,6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s:		mov al,[bx+3]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		and al,11011111b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov [bx+3],al&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		add bx,16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		loop s&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ax,4cooH&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		int 21H&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;codesg ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;end start&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;将 datasg 的每个字母变为大写&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;assume cs:codesg, ds:datasg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;datasg segment&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	db &amp;#x27;add       &amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	db &amp;#x27;asm       &amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	db &amp;#x27;and       &amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	db &amp;#x27;ano       &amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;datasg ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;codesg segment&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;start:	mov dx,datasg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ds,dx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov bx,0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov cx,4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s0:		mov ax,cx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov si,0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov cx,3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s:		mov al,[bx+si]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        and al,11011111b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mov [bx+si],al&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        inc si&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        loop s&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		add bx,16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov cx,ax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		loop s0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ax,4cooH&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		int 21H&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;codesg ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;end start&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样做 cx 不会被覆盖导致死循环，进入循环前先保存起来&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;assume cs:codesg, ds:datasg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;datasg segment&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	db &amp;#x27;add       &amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	db &amp;#x27;asm       &amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	db &amp;#x27;and       &amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	db &amp;#x27;ano       &amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	dw 0    ;用于保存cx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;datasg ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;codesg segment&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;start:	mov dx,datasg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ds,dx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov bx,0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov cx,4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s0:		mov ds:[40H],cx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov si,0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov cx,3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s:		mov al,[bx+si]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        and al,11011111b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mov [bx+si],al&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        inc si&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        loop s&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		add bx,16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov cx,ds:[40H]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		loop s0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ax,4cooH&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		int 21H&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;codesg ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;end start&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;将 cx 放在内存中来解决寄存器不够的问题&lt;/p&gt;
&lt;p&gt;更好的办法是使用栈，在调用函数前 push 到栈中，调用结束后 pop 回内存中，防止因为调用函数导致寄存器被篡改&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;assume cs:codesg, ds:datasg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;datasg segment&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	db &amp;#x27;add       &amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	db &amp;#x27;asm       &amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	db &amp;#x27;and       &amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	db &amp;#x27;ano       &amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	dw 0    ;用于保存cx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;datasg ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stacksg segment&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	dw 0,0,0,0,0,0,0,0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stacksg ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;codesg segment&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;start:	mov ax,stacksg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ss,ax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov sp,16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ax,datasg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ds,ax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov bx,0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov cx,4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s0:		push cx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov si,0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov cx,3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s:		mov al,[bx+si]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        and al,11011111b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mov [bx+si],al&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        inc si&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        loop s&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		add bx,16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		pop cx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		loop s0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ax,4cooH&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		int 21H&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;codesg ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;end start&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;将 datasg 段中每个单词的前四个字改为大写字&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;assume cs:codesg,ds:datasg,ss:stacksg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;datasg segment&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	db &amp;#x27;1. display       &amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	db &amp;#x27;2. display       &amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	db &amp;#x27;3. display       &amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	db &amp;#x27;4. display       &amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	dw 0    ;用于保存cx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;datasg ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stacksg segment&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	dw 0,0,0,0,0,0,0,0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stacksg ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;codesg segment&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;start:	mov ax,stacksg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ss,ax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov sp,16 ;定位栈段&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ax,datasg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ds,ax  ;定位内存&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov bx,0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov cx,4  ;循环条件，bx偏移地址，cx循环条件，因为有四条字母，所以四次循环&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s0:		push cx   ;外层循环，用户列循环，将cx入栈保证cx不受后续内层循环干扰&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov si,0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov cx,4  ;内层循环，因为大写前四个字母，循环四次&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s:		mov al,[bx+3+si]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        and al,11011111b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mov [bx+3+si],al&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        inc si&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        loop s&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		add bx,16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		pop cx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		loop s0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ax,4cooH&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		int 21H&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;codesg ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;end start&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;数据处理的问题&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据处理的问题&#34;&gt;#&lt;/a&gt; 数据处理的问题&lt;/h2&gt;
&lt;p&gt;reg 和 sreg  寄存器，段寄存器&lt;/p&gt;
&lt;p&gt;只有四个寄存器 bx,bp,si,di 可以用在 [] 中进行内存单元的寻址，可以单个出现或四种组合出现&lt;/p&gt;
&lt;p&gt;注意: mov ax [bp+bx]   mov ax,[si+di] 不能一起使用&lt;/p&gt;
&lt;p&gt;bp 如果没有显示指定段地址，那么段地址默认在 ss 中，可以简单理解为 sp&lt;/p&gt;
&lt;p&gt;mov ax,[bp]&lt;/p&gt;
&lt;p&gt;mov ax,[bp+si]&lt;/p&gt;
&lt;p&gt;mov ax,[bp+idata]&lt;/p&gt;
&lt;p&gt;汇编语句用三个概念来表达数据的位置&lt;/p&gt;
&lt;p&gt;1. 立即数&lt;/p&gt;
&lt;p&gt;2. 寄存器&lt;/p&gt;
&lt;p&gt;3. 段地址 (SA)，偏移地址 (EA)&lt;/p&gt;
&lt;p&gt;段地址寄存器默认&lt;/p&gt;
&lt;p&gt;mov ax,[0]   //==mov ax,ds:[0] , 注意，只有 0 能这么搞，其他的数字会被当成立即数处理，不会被当场偏移地址处理&lt;/p&gt;
&lt;p&gt;mov ax,[bx+si]&lt;/p&gt;
&lt;p&gt;mov ax,[bp]    // 段地址默认在 ss 中&lt;/p&gt;
&lt;p&gt;段地址寄存器显示指出&lt;/p&gt;
&lt;p&gt;mov ax,ds:[bp]&lt;/p&gt;
&lt;p&gt;mov ax,cs:[bx+si+8]  // 显示指出可以随便给，默认指出就给 ss&lt;/p&gt;
&lt;p&gt;寻址方式&lt;/p&gt;
&lt;img data-src=&#34;https://kbshire-1308981697.cos.ap-shanghai.myqcloud.com/img/image-20221022185518717.png&#34; alt=&#34;image-20221022185518717&#34; style=&#34;zoom:67%;&#34; /&gt;
&lt;img data-src=&#34;https://kbshire-1308981697.cos.ap-shanghai.myqcloud.com/img/image-20221022191402201.png&#34; alt=&#34;image-20221022191402201&#34; style=&#34;zoom:67%;&#34; /&gt;
&lt;blockquote&gt;
&lt;p&gt;1. 将 cs：ip 通过地址加法器，算出一个 20 位的地址，通过地址总线，送到内存中，在内存中找到对应的位置&lt;/p&gt;
&lt;p&gt;2. 将 1 找到的内存的数据，比如 A10E00 通过数据总线，送到指令缓冲寄存器中&lt;/p&gt;
&lt;p&gt;3. 执行指令&lt;/p&gt;
&lt;p&gt;4. 将所有偏移地址送到地址加法器中算出一个偏移地址，通过地址总线送到内存中&lt;/p&gt;
&lt;p&gt;5. 将 4 中的数据，比如 A10E 通过数据总线，送给对应寄存器&lt;/p&gt;
&lt;p&gt;6.IP 指向下一条指令&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;确定要处理的数据有多长&lt;/p&gt;
&lt;p&gt;1. 通过寄存器名指明数据大小 mov ax,1 这时 1 就是 16 位的，因为 ax 也是 16 位的    mov ax,ds:[0]  这时候 ds 偏移地址中数据也是八位的&lt;/p&gt;
&lt;p&gt;2. 通过操作符 x ptr 指明内存单元长度，x 可以为 word 或 byte，可以理解为强制转换法&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;mov word ptr ds:[0],1     // 这时 16 位的，0001H&lt;/p&gt;
&lt;p&gt;inc word ptr [bx],2&lt;/p&gt;
&lt;p&gt;mov byte ptr ds:[0],1  // 这时 8 位的，01H&lt;/p&gt;
&lt;p&gt;double word ptr 双字&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;3. 其他方法 push [1000H] 入栈，push 指令只对字进行操作 sp=sp-2&lt;/p&gt;
&lt;p&gt;用 bx 定位整个结构体，用 idata 定位结构体中的某一个数据项，用 si 定位数组项中的每个元素。&lt;/p&gt;
&lt;p&gt;[bx].idata&lt;/p&gt;
&lt;p&gt;[bx].idata[si]&lt;/p&gt;
&lt;p&gt;div&lt;/p&gt;
&lt;p&gt;除数 8/16 位，被除数默认放在 ax,dx 和 ax 中&lt;/p&gt;
&lt;p&gt;如果除数为 8 位，被除数需要 16 位 (ax)&lt;/p&gt;
&lt;p&gt;如果除数为 16 位，被除数需要 32 位 (ax+dx),dx 是高位，ax 是低位&lt;/p&gt;
&lt;p&gt;除数是 8 位的时候，商在 al 中，余数在 ah 中&lt;/p&gt;
&lt;p&gt;除数是 16 位的时候，商在 ax 中，余数在 dx 中&lt;/p&gt;
&lt;p&gt;div 寄存器&lt;/p&gt;
&lt;p&gt;div 内存单元&lt;/p&gt;
&lt;p&gt;div btye ptr ds:[0]   // &lt;code&gt;(al)=(ax)/((ds)*16+0)的商，(ah)=(ax)/((ds)*16+0)的余数&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;div word ptr es:[0]  // &lt;code&gt;(ax)=[(dx)*10000H+(ax)]/((ds)*16+0)的商，(dx)=[(dx)*10000H+(ax)]/((ds)*16)+0的余数&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;10001/100&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;mov dx,1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov ax,86a1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov bx,100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;div bx&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;1001/100&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;mov ax,1001&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mob bl,100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;div bl&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;dd 定义双字&lt;/p&gt;
&lt;p&gt;用 div 计第 data 段中第一个数据除以第二个数据后的结果・商存放在第 3 个数据的存储单元。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;assume cs:code,ds:data&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data segment&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	dd 100001&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	dw 100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	dw 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code segment&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;start:	mov ax,data	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ds,ax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ax,ds:[0]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov dx,ds:[2]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		div word ptr ds:[4]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ds:[6],ax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ax,4c00H&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		int 21H&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;codesg ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;end start&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;dup&lt;/p&gt;
&lt;p&gt;db 3 dup (0)   定义 3byte，他们值都是 0&lt;/p&gt;
&lt;p&gt;db 3 dup(0,1,2)  //0,1,2,0,1,2,0,1,2&lt;/p&gt;
&lt;p&gt;db 3 dup(‘abc’,‘ABC’)  //abcABCabcABCabcABC&lt;/p&gt;
&lt;p&gt;db/dw/dd n dup()&lt;/p&gt;
&lt;h2 id=&#34;转移指令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#转移指令&#34;&gt;#&lt;/a&gt; 转移指令&lt;/h2&gt;
&lt;p&gt;8086 转移指令分为：&lt;/p&gt;
&lt;p&gt;8086CPU 的转移行为有以下几类。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1. 无条件转移&lt;/p&gt;
&lt;p&gt;2. 条件转移指令&lt;/p&gt;
&lt;p&gt;3. 循环指令&lt;/p&gt;
&lt;p&gt;4. 过程&lt;/p&gt;
&lt;p&gt;5. 中断&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;jmp 无条件跳转&lt;/p&gt;
&lt;p&gt;只修改 IP 时，称为段内转移，比如: jmp ax。&lt;/p&gt;
&lt;p&gt;同时修改 CS 和 IP 时，称为段间转移，比如: jmp 1000:0。&lt;/p&gt;
&lt;p&gt;由于转移指令对 IP 的修改范围不同，段内转移又分为：短转移和近转移。&lt;/p&gt;
&lt;p&gt;短转移 IP 的修改范围为 - 128~127。&lt;/p&gt;
&lt;p&gt;近转移 IP 的修改范围为 - 32768~32767。&lt;/p&gt;
&lt;p&gt;操作符 offset&lt;/p&gt;
&lt;p&gt;取得标号的偏移地址&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;start:	mov ax,offset start   ;mov ax,0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s:		mov ax,offset s		  ;mov ax,3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;jmp 指令&lt;/p&gt;
&lt;p&gt;&lt;code&gt;jmp short 标号&lt;/code&gt;   ；转移到标号处执行指令是种短转移，修改 IP 范围为 - 128-127&lt;/p&gt;
&lt;p&gt;然鹅，jmp 0008 的机器码为 EB 03，0008 为需要跳转的命令地址&lt;/p&gt;
&lt;p&gt;jmp 000A   EB 05&lt;/p&gt;
&lt;p&gt;CPU 不需要目的地址就可以实现对 IP 的修改&lt;/p&gt;
&lt;p&gt;EB 后面的数字实际是个 offset，说明目的指令离 jmp 五个字节&lt;/p&gt;
&lt;p&gt;&lt;code&gt;jmp near ptr 标号 &lt;/code&gt;  , 用于实现段内近转移位移范围 - 32769-32767&lt;/p&gt;
&lt;p&gt;&lt;code&gt;jmp far ptr 标号&lt;/code&gt;      // 段间转移，远转移&lt;/p&gt;
&lt;p&gt;far ptr 指明了格用标号的段地址和偏移地址修改 CS 和 IP&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://kbshire-1308981697.cos.ap-shanghai.myqcloud.com/img/image-20221024210038120.png&#34; alt=&#34;image-20221024210038120&#34;&gt;&lt;/p&gt;
&lt;p&gt;此时机器码为跳转的地址，IP 在前，CS 在后&lt;/p&gt;
&lt;p&gt;&lt;code&gt;jmp 16位寄存器&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;jmp ax     // 实现段内近 / 短转移，ax 中为 ip 的值&lt;/p&gt;
&lt;p&gt;转移地址在内存中：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;jmp word ptr 内存单元地址&lt;/code&gt;     // 实现内存单元地址的段内转移，内存单元地址是目的地址&lt;/p&gt;
&lt;p&gt;jmp word ptr ds:[0]&lt;/p&gt;
&lt;p&gt;jmp word ptr [bx]&lt;/p&gt;
&lt;p&gt;&lt;code&gt;jmp dword ptr 内存单元地址&lt;/code&gt;    // 段间跳转，跳转时 IP 是高位，CS 是低位&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;mov ax,0123H&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov [bx],ax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov word ptr [bx+2],0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jmp dword ptr [bx]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;jcxz 标号；有条件跳转指令&lt;/p&gt;
&lt;p&gt;IP 修改范围 - 128-127&lt;/p&gt;
&lt;p&gt;如果 cx=0，转移到标号处&lt;/p&gt;
&lt;p&gt;cx=0 时，IP 位移&lt;/p&gt;
&lt;p&gt;cx!=0 向下执行&lt;/p&gt;
&lt;p&gt;loop 标号&lt;/p&gt;
&lt;p&gt;转移范围 - 128-127，短转移&lt;/p&gt;
&lt;p&gt;cx=0 向下执行，cx！=0 转移到标号处&lt;/p&gt;
&lt;h2 id=&#34;call和ret&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#call和ret&#34;&gt;#&lt;/a&gt; call 和 ret&lt;/h2&gt;
&lt;p&gt;call 和 ret 都是转移指令，他们都修改 IP，或者同时修改 CS:IP&lt;/p&gt;
&lt;p&gt;ret 用栈中数据修改 IP 实现近转移&lt;/p&gt;
&lt;p&gt;IP = SS*16 + SP&lt;/p&gt;
&lt;p&gt;SP = SP + 2&lt;/p&gt;
&lt;p&gt;pop ip&lt;/p&gt;
&lt;p&gt;retf 修改 CS:IP 实现远转移&lt;/p&gt;
&lt;p&gt;IP = SS*16 + SP&lt;/p&gt;
&lt;p&gt;SP = SP + 2&lt;/p&gt;
&lt;p&gt;CS = ss*16 + SP&lt;/p&gt;
&lt;p&gt;(SP) = (SP) + 2&lt;/p&gt;
&lt;p&gt;pop ip&lt;/p&gt;
&lt;p&gt;pop cs&lt;/p&gt;
&lt;p&gt;call&lt;/p&gt;
&lt;p&gt;将 IP 或 CSIP 入栈，转移 (jmp)&lt;/p&gt;
&lt;p&gt;call 不能实现短转移&lt;/p&gt;
&lt;p&gt;call 标号   将当前 IP 压栈，转移到标号&lt;/p&gt;
&lt;p&gt;sp = sp -2&lt;/p&gt;
&lt;p&gt;ss*16 + sp = IP&lt;/p&gt;
&lt;p&gt;IP = IP + 位移 (16 位)&lt;/p&gt;
&lt;p&gt;相当于: push ip     +  jmp near ptr 标号&lt;/p&gt;
&lt;p&gt;call 只是将当前位置保存到栈了，其余和 jmp 一样&lt;/p&gt;
&lt;p&gt;call 16 位寄存器&lt;/p&gt;
&lt;p&gt;push IP&lt;/p&gt;
&lt;p&gt;jmp bx&lt;/p&gt;
&lt;p&gt;转移地址在内存中 call&lt;/p&gt;
&lt;p&gt;call word ptr 内存地址&lt;/p&gt;
&lt;p&gt;push IP   jmp word ptr 偏移地址&lt;/p&gt;
&lt;p&gt;call dword ptr 内存地址&lt;/p&gt;
&lt;p&gt;push cs   push IP   jmp dword ptr 内存单元地址&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;mov sp,10h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov ax,0123h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov ds:[0],ax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov word ptr ds:[2],0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;call dword ptr ds:[0]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;此时ds中低位为0123(IP)，高位为0000(CS)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;call结束后,cs=0,ip=0123,sp=0ch&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;assume cs:code&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code segment&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;start: 	mov ax,1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov cx,3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		call s&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov bx,ax  ;bx=8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ax,4c00h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		int 21h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s:		add ax,ax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		loop s&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;end start    ;实现2^n&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;https://kbshire-1308981697.cos.ap-shanghai.myqcloud.com/img/image-20221028213345088.png&#34; alt=&#34;image-20221028213345088&#34;&gt;&lt;/p&gt;
&lt;p&gt;某种意义上来说，call 是调用，ret 是返回 (return)&lt;/p&gt;
&lt;p&gt;call 和 ret 要对应&lt;/p&gt;
&lt;p&gt;mul 指令&lt;/p&gt;
&lt;p&gt;相乘的两个数要么都是 8 要么都是 16&lt;/p&gt;
&lt;p&gt;8 位：AL 中或内存中&lt;/p&gt;
&lt;p&gt;16 位：AX 中或内存中&lt;/p&gt;
&lt;p&gt;结果：&lt;/p&gt;
&lt;p&gt;8 位：ax 中&lt;/p&gt;
&lt;p&gt;16 位：dx（高位），ax（低位）&lt;/p&gt;
&lt;p&gt;mul 寄存器&lt;/p&gt;
&lt;p&gt;mul 内存单元&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;mul byte ptr ds:[0]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ax = al * (ds:[0])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mul word ptr [bx+si+8]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ax=ax*([bx+si+8]) 低16位&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dx=ax*([bx+si+8]) 高16位&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;100*10&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;mov al,100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov b1,10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mul bl&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;即需要将任意一个乘数放在 ax 或 al 中，另一个乘数放在空闲的通用寄存器中&lt;/p&gt;
&lt;p&gt;计算 n 的三次方&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cube:	mov ax,bx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mul bx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mul bx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		ret&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;dw 的三次方放入 dw 中&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;assume cs:code,cs:data,ss:stack&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data segment&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	dw 1,2,3,4,5,6,7,8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	dw 0,0,0,0,0,0,0,0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code segment&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;start:	mov ax,data&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ds,ax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov cx,8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov si,0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s:		mov bx,[si]  ;bx作为cube的参数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		call cube&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov [si+32],ax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		add ax,2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		loop s&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ax,4c00H&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		int 21H&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cube:	mov ax,bx	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mul bx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mul bx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;end start&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;对于批量数据的传递，我们将它存在内存中，然后把首地址放在寄存器中&lt;/p&gt;
&lt;p&gt;判断是否以 0 结束，不是就转为大写&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;capital:mov cl:[si]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mov ch,0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        jcxz ok&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        and byte ptr[si],11011111b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        inc si&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        jmp short capital&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;标志寄存器&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#标志寄存器&#34;&gt;#&lt;/a&gt; 标志寄存器&lt;/h2&gt;
&lt;p&gt;8086CPU 的标志客存器有 16 位，其中存储的信息通常被称为程序状态字 (PSW) 。&lt;/p&gt;
&lt;p&gt;标志寄存器结构：&lt;/p&gt;
&lt;img data-src=&#34;https://kbshire-1308981697.cos.ap-shanghai.myqcloud.com/img/image-20221030202144281.png&#34; alt=&#34;image-20221030202144281&#34; style=&#34;zoom:67%;&#34; /&gt;
&lt;img data-src=&#34;https://kbshire-1308981697.cos.ap-shanghai.myqcloud.com/img/image-20221030205228119.png&#34; alt=&#34;image-20221030205228119&#34; style=&#34;zoom:67%;&#34; /&gt;
&lt;img data-src=&#34;https://kbshire-1308981697.cos.ap-shanghai.myqcloud.com/img/image-20221030205356183.png&#34; alt=&#34;image-20221030205356183&#34; style=&#34;zoom:67%;&#34; /&gt;
&lt;p&gt;ZF&lt;/p&gt;
&lt;p&gt;零标志位，执行指令后如果结果为 0，zf=1&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;mov ax,1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sub ax,1 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;此时ZF=1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运算指令，大多数会影响 ZF 寄存器&lt;/p&gt;
&lt;p&gt;PF&lt;/p&gt;
&lt;p&gt;奇偶标志位，指令执行后，如果 1 的个数为偶数，PF=1&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;mov al,1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add al,10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;;00001011   PF=0  因为3个1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;SF&lt;/p&gt;
&lt;p&gt;符号标志位，执行指令后，结果为负，SF=1&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;mov al,10000001&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add al,1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;;可以当做无符号，130，有符号，-126&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;CF&lt;/p&gt;
&lt;p&gt;进位标志位，无符号运算标志位可能产生结果&lt;/p&gt;
&lt;p&gt;CF=NC 无进位，CF=CY 有进位，只记录上一条指令的变化&lt;/p&gt;
&lt;p&gt;not carry carry&lt;/p&gt;
&lt;p&gt;进位是更高位&lt;/p&gt;
&lt;p&gt;OF&lt;/p&gt;
&lt;p&gt;溢出标志位，有符号运算可能产生结果&lt;/p&gt;
&lt;p&gt;OF=OV 溢出  OF=NV 无溢出&lt;/p&gt;
&lt;p&gt;溢出是侵犯了符号位&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;当成有符号就看 OF 和 SF，当成无符号就看 CF&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;ADC&lt;/p&gt;
&lt;p&gt;带进位加法指令，利用了 CF 上进位值&lt;/p&gt;
&lt;p&gt;adc ax,bx   ;ax = ax + bx + cf&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;mov ax,2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov bx,1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sub bx,ax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;adc ax,1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;;ax=4 ax+1+cf=2+1+1=4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;mov al,98h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add al,al&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;adc al,3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;;ax+3+cf = 30+3+1=34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;加法分为两步&lt;/p&gt;
&lt;p&gt;1. 低位相加&lt;/p&gt;
&lt;p&gt;2. 高位相加，在加上低位相加产生的进位值&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;add ax,bx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;===&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add al,bl&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;adc ah,bh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;就是那种 1EF000H+201000H&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;assume cs:code&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code segment&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;start:	mov ax,01EFH  ;high&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov bx,0F00H  ;low &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov cx,1000H  ;low&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov dx,0201H  ;high&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		add bx,cx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		adc ax,dx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cube:	mov ax,bx	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mul bx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mul bx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;end start&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;或者只用两个寄存器&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;mov ax,001EH&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov bx,0F000H&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add bx,1000H&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;adc ax,0020H&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;inc 和 loop 不影响 CF 的值，因此不能替换为 add ax,2&lt;/p&gt;
&lt;p&gt;sbb&lt;/p&gt;
&lt;p&gt;带进位减法指令&lt;/p&gt;
&lt;p&gt;sbb ax,bx&lt;/p&gt;
&lt;p&gt;ax = ax - bx - cf&lt;/p&gt;
&lt;p&gt;cmp&lt;/p&gt;
&lt;p&gt;功能类似于减法指令，但不保存结果，只对标志寄存器产生影响&lt;/p&gt;
&lt;p&gt;cmp ax,ax&lt;/p&gt;
&lt;p&gt;ax-ax ，不保存结果，只影响 flag，ZF=1,PF=1,SF=1,CF=0,OF=0&lt;/p&gt;
&lt;p&gt;cmp ax,bx&lt;/p&gt;
&lt;img data-src=&#34;https://kbshire-1308981697.cos.ap-shanghai.myqcloud.com/img/image-20221031205029865.png&#34; alt=&#34;image-20221031205029865&#34; style=&#34;zoom:67%;&#34; /&gt;
&lt;p&gt;cmp ax,ax&lt;/p&gt;
&lt;img data-src=&#34;https://kbshire-1308981697.cos.ap-shanghai.myqcloud.com/img/image-20221031205427616.png&#34; alt=&#34;image-20221031205427616&#34; style=&#34;zoom:67%;&#34; /&gt;
&lt;p&gt;cmp ah,bh 比较有符号数时，需要比较 SF 和 OF&lt;/p&gt;
&lt;p&gt;sf=1,of=0,ah&amp;lt;bh&lt;/p&gt;
&lt;p&gt;SF=1,OF=1,ah&amp;gt;bh&lt;/p&gt;
&lt;p&gt;SF=0,of=1,ah&amp;lt;bh&lt;/p&gt;
&lt;p&gt;sf=0,of=0,ah&amp;gt;=bh&lt;/p&gt;
&lt;p&gt;据无符号数的比较结果进行转移的条件转移指令，它们检测 ZF,CF 的值；&lt;/p&gt;
&lt;p&gt;和根据有符号数的比较结果进行转移的条件转移指令，它们检测 SF,OF ,ZF 的值・&lt;/p&gt;
&lt;p&gt;以下都是无符号指令比较时&lt;/p&gt;
&lt;img data-src=&#34;https://kbshire-1308981697.cos.ap-shanghai.myqcloud.com/img/image-20221031210918994.png&#34; alt=&#34;image-20221031210918994&#34; style=&#34;zoom:67%;&#34; /&gt;
&lt;p&gt;equal&lt;/p&gt;
&lt;p&gt;not equal&lt;/p&gt;
&lt;p&gt;below&lt;/p&gt;
&lt;p&gt;not below&lt;/p&gt;
&lt;p&gt;above&lt;/p&gt;
&lt;p&gt;not above&lt;/p&gt;
&lt;p&gt;ah=bh,ah=ah+ah,ah=ah+bh&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;assume cs:code&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code segment&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;start:	mov ah,45h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov bh 48h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		cmp ah,bh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		je s&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		add ah,ah&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		jmp short ok&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s:		add ah,ah&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ok: 	ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;end start&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;cmp 和 je 等可以单独出现&lt;/p&gt;
&lt;p&gt;data 中是否小于 8，结果保存在 ax 中&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;assume cs:code,ds:data&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data segment&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	db 1,2,3,4,5,6,7,8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code segment&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;start:	mov dx,data&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ds,dx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ax,0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov bx,0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov cx,0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s0:		cmp byte ptr [bx],8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		jnb s&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		inc ax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s:		inc bx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		loop s0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ax,4c00h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		int 21h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;end start&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;DF&lt;/p&gt;
&lt;p&gt;方向标志位，串处理指令中，控制 si，di 增减&lt;/p&gt;
&lt;p&gt;DF=0，si,di 递增&lt;/p&gt;
&lt;p&gt;DF=1，si,di 递减&lt;/p&gt;
&lt;p&gt;movsb&lt;/p&gt;
&lt;p&gt;以字节为单位传送&lt;/p&gt;
&lt;p&gt;1. &lt;code&gt;es*16 + di = ds*16+di&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;2. 如果 df=0，si,di++&lt;/p&gt;
&lt;p&gt;如果 df=1，si,di–&lt;/p&gt;
&lt;p&gt;movsw&lt;/p&gt;
&lt;p&gt;和 movsb 一样，但 si 和 di 是以 2 递增或递减&lt;/p&gt;
&lt;p&gt;rep movsb&lt;/p&gt;
&lt;p&gt;rep movsw&lt;/p&gt;
&lt;p&gt;根据 cx 的值，重复后面的串传送指令&lt;/p&gt;
&lt;p&gt;循环实现 cx 个字符的传送，从 ds 送到 es&lt;/p&gt;
&lt;p&gt;cld：将 DF=0&lt;/p&gt;
&lt;p&gt;std：将 DF=1&lt;/p&gt;
&lt;p&gt;将 data 段的第一个字符串送到后面的空间&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;assume cs:code&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data segment&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	db &amp;#x27;welcome to masm!&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	db 16 dup (0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code segment&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;start:	mov dx,data&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ds,dx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov es,dx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov si,0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov di,16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov cx,16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		cld&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		rep movsb&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ax,4c00h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		int 21h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;end start&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;pushf&lt;/p&gt;
&lt;p&gt;将标志寄存器压栈&lt;/p&gt;
&lt;p&gt;popf 从栈中弹出数据，送入标志寄存器&lt;/p&gt;
&lt;p&gt;比如&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;push ax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;popf&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;那么此时ax中就是标志寄存器中的值&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果学破解，到这边就可以跑路了&lt;/p&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;h2 id=&#34;中断&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#中断&#34;&gt;#&lt;/a&gt; 中断&lt;/h2&gt;
&lt;p&gt;中断分为硬件中断和软件中断&lt;/p&gt;
&lt;p&gt;硬件中断分为外部中断和内部中断&lt;/p&gt;
&lt;p&gt;内部中断是不可屏蔽的中断&lt;/p&gt;
&lt;p&gt;外部中断时可屏蔽的中断&lt;/p&gt;
&lt;p&gt;中断向量表&lt;/p&gt;
&lt;p&gt;CPU 用八位类型码通过中断向量表找到中断程序的入口地址&lt;/p&gt;
&lt;p&gt;中断向量表可以裂解为一个索引&lt;/p&gt;
&lt;p&gt;其中存放着 256 个中断源所对应的中断处理 程序入口&lt;/p&gt;
&lt;p&gt;8086 中，中断向量表在 0000:0000 - 0000:03FF 1024 个字节&lt;/p&gt;
&lt;p&gt;中断过程&lt;/p&gt;
&lt;p&gt;1. 取得中断类型码 N&lt;/p&gt;
&lt;p&gt;2.pushf&lt;/p&gt;
&lt;p&gt;3.TF=0，IF=0&lt;/p&gt;
&lt;p&gt;4.push cs&lt;/p&gt;
&lt;p&gt;5.push ip&lt;/p&gt;
&lt;p&gt;6. &lt;code&gt;(IP) = (N*4) , (CS) = (N*4+2)&lt;/code&gt;    N*x 指的是在中断向量表中找 CS 和 IP&lt;/p&gt;
&lt;p&gt;中断处理步骤&lt;/p&gt;
&lt;p&gt;1. 保存用到的寄存器&lt;/p&gt;
&lt;p&gt;2. 处理中断&lt;/p&gt;
&lt;p&gt;3. 恢复用到的寄存器&lt;/p&gt;
&lt;p&gt;4. 用 iret 指令返回&lt;/p&gt;
&lt;p&gt;iret – pop ip  pop cs  popf&lt;/p&gt;
&lt;p&gt;中断寄存器入栈标志，CS，IP。iret 正好和他相反&lt;/p&gt;
&lt;p&gt;除法溢出，产生中断类型为 0&lt;/p&gt;
&lt;p&gt;我们是可以改变中断后处理的过程的&lt;/p&gt;
&lt;p&gt;改变 0 号中断处理程序&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;assume cs:code&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code segment&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;start:	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ax, cs&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ds, ax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov si, offset do0		;设置ds:si指向源地址&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ax, 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov es, ax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov di, 200h			;设置es:di指向目的地址&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov cx, offset do0end - offset do0		;设置cx为传输长度&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		cld				        ;设置传输方向为正&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		rep movsb&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ax, 0               ;设置中断向量表&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov es, ax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov word ptr es:[0*4], 200h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov word ptr es:[0*4+2], 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      	mov ax,4c00h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      	int 21h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;do0:	jmp short do0start&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      	db &amp;quot;Welcome to Fishc.com!&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;do0start:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      	mov ax, cs&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      	mov ds, ax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      	mov si, 202h			;设置ds:si指向字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      	mov ax, 0b800h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      	mov es, ax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov di, 12*160+36*2		;设置es:di指向显存空间的中间位置&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mov cx, 21				;设置cx为字符串长度&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	s:	mov al, [si]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      	mov es:[di], al&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      	inc si&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      	add di, 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov al, 02h             ;设置颜色&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov es:[di], al        &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		add di, 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      	loop s&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      	mov ax, 4c00h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      	int 21h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;do0end:	nop&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;end start&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;单步中断&lt;/p&gt;
&lt;p&gt;CPU 在执行完一条指令之后，如果检到标志寄存器的 TF 位为 1，则产生单步中断，引发中断过程。&lt;/p&gt;
&lt;p&gt;但不中断类型码为 1&lt;/p&gt;
&lt;p&gt;中断过程：&lt;/p&gt;
&lt;p&gt;取得中断类型码 1&lt;/p&gt;
&lt;p&gt;TF=0 ,IF=0&lt;/p&gt;
&lt;p&gt;CS,IP 入栈&lt;/p&gt;
&lt;p&gt;&lt;code&gt;IP=(1*4)  CS=(1*4+2)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;TF=1, 执行程一条指令后执行单步中断&lt;/p&gt;
&lt;p&gt;使用 t 命令是，debug 将 tf=1，执行完一条指令引发单步中断，显示寄存器，等待输入&lt;/p&gt;
&lt;p&gt;也有情况，即使发生中断，也不响应&lt;/p&gt;
&lt;p&gt;设置完 ss 后，即使中断，cpu 也不响应，因为 ss:sp 需要连续完成，不然 sp 指向的不是正确的栈顶&lt;/p&gt;
&lt;p&gt;我们利用这个特性，将 ss 和 sp 的设置指令连续存放&lt;/p&gt;
&lt;p&gt;mov ax,1000h&lt;/p&gt;
&lt;p&gt;mov ss,ax&lt;/p&gt;
&lt;p&gt;mov sp,0&lt;/p&gt;
&lt;p&gt;mov ax,10&lt;/p&gt;
&lt;p&gt;如果 ax=10 放在 sp 和 ss 中间，该指令不会被执行&lt;/p&gt;
&lt;h2 id=&#34;int&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#int&#34;&gt;#&lt;/a&gt; int&lt;/h2&gt;
&lt;p&gt;int n  n 为中断类型码，引发中断过程&lt;/p&gt;
&lt;p&gt;1. 取得类型码 n&lt;/p&gt;
&lt;p&gt;2.IF=0,TF=0&lt;/p&gt;
&lt;p&gt;3.CS,IP 入栈&lt;/p&gt;
&lt;p&gt;&lt;code&gt;4.IP=(n*4)  CS=(n*4+2)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;可以不做触发，通过 int 执行 0 号中断&lt;/p&gt;
&lt;p&gt;int 一般和 iret 指令配合使用&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;assume cs:code&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code segment&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;start:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ax,cs&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ds,ax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov si,offset capital&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ax,0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov es,ax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov di,200h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov cx,offset capitalend - offset capital&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		cld&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		rep movsb&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ax,0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov es,ax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov word ptr es:[7ch*4],200h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov word ptr es:[7ch*4+2],0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ax,4c00h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		int 21h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;capital:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		push cx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		push si&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;change: &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov cl,[si]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mov ch,0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		jcxz ok&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		and byte ptr [si],11011111b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		inc si&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		jmp short change&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ok:	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		pop si&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		pop cx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		iret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;capitalend:nop&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;end start&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;int 10h 是 bios 中断例程&lt;/p&gt;
&lt;p&gt;BIOS 和 DOS 中断例程用 ah 来传递子程序的编号&lt;/p&gt;
&lt;p&gt;&lt;code&gt;(ah)=2表示调用第10h号中断例程的 2号子程序，功能为设置光标位置，可以提供光标所在的行号（80*25字符模式下:0~24 ),列号（80*25字符模式下: 0~79)，和页号作为参数。(bh)=6 , (dh)=5, (d1)=12，设置光标到第0页，第5行，第12列。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;内存地址中 B8000-BFFFFh 共 32kb，为显示缓冲区&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;;编程：在屏幕的5行12列显示3个红底高亮闪烁绿色的‘a’。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;assume cs:code&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code segment&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	mov ah,2 	;置光标&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	mov bh,0	;第0页&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	mov dh,5	;dh中放行号&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	mov dl,12	;dl中放列号&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int 10h	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	mov ah,9	;置光标&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	mov al,&amp;#x27;a&amp;#x27;	;字符&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	mov bl,11001010b;颜色属性&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	mov bh,0	;第0页&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	mov cx,3	;字符重复个数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int 10h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	mov ax,4c00h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int 21h &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;end&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;int 21H&lt;/p&gt;
&lt;p&gt;int 21h 中断例程是 DOS 提供的中断例程，其中包含了 DOS 提供给程序员在编程时调用为子程序&lt;/p&gt;
&lt;p&gt;我们从前一直使用的是 int 21 中断例程 4ch 号功能，即程序返回功能&lt;/p&gt;
&lt;p&gt;mov ah,4ch  ; 程序返回&lt;/p&gt;
&lt;p&gt;mov al,0        ; 返回值&lt;/p&gt;
&lt;p&gt;int 21h&lt;/p&gt;
&lt;h2 id=&#34;端口&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#端口&#34;&gt;#&lt;/a&gt; 端口&lt;/h2&gt;
&lt;p&gt;端口读写指令 in 和 out 分别用于读取和写入数据&lt;/p&gt;
&lt;p&gt;in al,60h&lt;/p&gt;
&lt;p&gt;从 60h 号端口读入一个字节&lt;/p&gt;
&lt;p&gt;在 in out 指令中，只能使用 ax 或 al 来存放从端口中读入的数据或要发送到端口中的数据&lt;/p&gt;
&lt;p&gt;in al,20h&lt;/p&gt;
&lt;p&gt;out 20h,al&lt;/p&gt;
&lt;p&gt;CMOS RAM&lt;/p&gt;
&lt;p&gt;包含一个时钟和一个有 128 位存储单元的 RAM 存储区&lt;/p&gt;
&lt;p&gt;128 个字节中，内部时钟占用 0-0dh，其余大部分单元用于保存系统配置信息&lt;/p&gt;
&lt;p&gt;BIOS 中有两个端口，为 70h 和 71h，通过这两个端口读取 CMOS RAM&lt;/p&gt;
&lt;p&gt;70h 为地址，存放 CMOS RAM 单元地址，71 为数据端口，存放选定的 CMOS RAM 读取的数据&lt;/p&gt;
&lt;p&gt;shl 和 shr&lt;/p&gt;
&lt;p&gt;逻辑移位指令&lt;/p&gt;
&lt;p&gt;shl 逻辑左移指令&lt;/p&gt;
&lt;p&gt;将一个数据向左移位，最后移除的移位写入 cf，最低位 0 补充，数据可以来自寄存器或内存单元&lt;/p&gt;
&lt;p&gt;移位位数大于 1 时，必须将移动位数放入 cl&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;mov al,01010001b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov cl,3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shl al,cl    ;从al拿出来在放回al去&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;shr&lt;/p&gt;
&lt;p&gt;和 shl 相反&lt;/p&gt;
&lt;p&gt;右移 = / 2&lt;/p&gt;
&lt;p&gt;CMOS RAM 中时间信息&lt;/p&gt;
&lt;p&gt;秒 00H&lt;/p&gt;
&lt;p&gt;分 02H&lt;/p&gt;
&lt;p&gt;时 04H&lt;/p&gt;
&lt;p&gt;日 07H&lt;/p&gt;
&lt;p&gt;月 08H&lt;/p&gt;
&lt;p&gt;年 09H&lt;/p&gt;
&lt;p&gt;他们都占一个字节，以 BCD 码存放&lt;/p&gt;
&lt;h2 id=&#34;外中断&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#外中断&#34;&gt;#&lt;/a&gt; 外中断&lt;/h2&gt;
&lt;p&gt;CPU 通过端口和外部设备进行联系&lt;/p&gt;
&lt;p&gt;外中断源有两类&lt;/p&gt;
&lt;p&gt;1. 可屏蔽中断&lt;/p&gt;
&lt;p&gt;2. 不可屏蔽中断&lt;/p&gt;
&lt;p&gt;IF=1 响应中断过程&lt;/p&gt;
&lt;p&gt;IF=0 不响应中断过程&lt;/p&gt;
&lt;p&gt;sti 设置 IF=1&lt;/p&gt;
&lt;p&gt;cli 设置 IF=0&lt;/p&gt;
&lt;p&gt;PC 机键盘处理过程&lt;/p&gt;
&lt;p&gt;引发 9 号中断&lt;/p&gt;
&lt;p&gt;— 般将按下一个键时产生的扫描码称为通码，松开一个键产生的扫描码称为断码&lt;/p&gt;
&lt;p&gt;断码 = 通码 + 80H&lt;/p&gt;
&lt;img data-src=&#34;https://kbshire-1308981697.cos.ap-shanghai.myqcloud.com/img/image-20221108214017480.png&#34; alt=&#34;image-20221108214017480&#34; style=&#34;zoom:50%;&#34; /&gt;
</content>
        <category term="汇编" />
        <updated>2022-11-01T05:38:45.000Z</updated>
    </entry>
</feed>
